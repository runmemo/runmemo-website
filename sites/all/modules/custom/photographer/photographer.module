<?php
/**
 * Init function for adding the external file
 */

function photographer_init()
{
	//to add the js file
	drupal_add_js(drupal_get_path("module","photographer")."/js/photographer.js");
	drupal_add_css(drupal_get_path('module', 'photographer').'/photographer.css');
}

/** 
 * Create the hook menu for each page 
 * by using this we can map to the related page
 */
function photographer_menu()
{
	
	//url for photographer
	$items['photographer'] = array(
			    'title' => 'Upload Photos',
			    'description' => t('View the objects in a bucket on your Amazon S3 account.'),
			    'page callback' => 'photographer_upload_photos',
			    'page arguments' => array(1),
			    'access arguments' => array('access_photographer'),
			    'type' => MENU_CALLBACK,
			  );
	return $items;

}

/**
 * Set the pemission for each url in the admin side
 * so we can the restrict the particular page to accessed by the anonymouse user
*/
function photographer_permission()
{

	return array(
			    

			    'access_photographer' => array(
			      'title' => t('Access photographer'),
			      'description' => t('Access photographer'),
			      'restrict access' => TRUE,
			    ),
		     );
}

/** 
 * Photographer page
 * where the photographer can upload the photos by selecting the event
 * uploaded photos are stored in the amazon_s3
*/
function select_event_function()
{
	$form = array();
	$form['events_select']=array('#type'=>'select','#title'=>'Select Event','#id'=>'event_select','#attributes'=>array('onchange'=>'return select_event_upload();'));
	$form['events_select']['#options']=array('select_event'=>"Select Event");
	$event_name=amazon_s3_get_buckets();
	foreach($event_name as $event_name_value)
	{
		$event_title=$event_name_value;
		if($event_title!='home_page')
			$form['events_select']['#options'][$event_title]=$event_title;
	}
	return $form;

}
/**
 * Drag and drop upload form creation
 */
function photographer_drag_and_drop_form() {

  $form = array();
  $form['#attributes'] = array('enctype' => 'multipart/form-data');

  $form['box'] = array(
    '#type' => 'fieldset',
    '#title' => t('Upload File'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  $form['box']['file'] = array(
    '#type' => 'plupload',
    '#title' => t('File to upload'),
    '#description' => t('Pick a file to upload'),
    '#size' => 40,
  );

  $form['box']['upload'] = array('#type' => 'submit', '#value' => 'Upload','#attributes'=>array('onclick'=>'return drag_drop_upload_validation();'));
  $form['box']['selected_event']=array('#type'=>'textfield','#title'=>'','#id'=>'selected_event_drag');
  return $form;
}

/** 
 * Drag and drop submit function
 */

function photographer_drag_and_drop_form_submit($form, &$form_state) {
//resource 2
  global $user;

  $uid=$user->uid;

  $s3 = amazon_s3_get_instance();

  //for loop for count the uploaded files resource 2
  for($i=0;$i<count($form['box']['file']['#value']);$i++)
  {
	  $bucket = $form['box']['selected_event']['#value'];
	  $upload_temp_filepath = $form['box']['file']['#value'][$i]['tmppath'];
	  $object_filename = $form['box']['file']['#value'][$i]['name']; 	

	  $acl = 'public-read';
	  $success = $s3->putObjectFile($upload_temp_filepath, $bucket, $object_filename, $acl);
	  
	  if ($success) {

	    $message = t('Succesfully uploaded the file %filename to the event %bucket.', array('%filename' => $object_filename, '%bucket' => $bucket));
	    drupal_set_message($message);
	  } else {
	    $message = t('Failed to upload the file %filename to the event %bucket.', array('%filename' => $object_filename, '%bucket' => $bucket));
	    drupal_set_message($message, 'error');
	  }
	  
  }
  $form_state['redirect'] = "photographer";
}



/**
 * Call back function for photographer
 */
function photographer_upload_photos() {
  $select_event=drupal_render(drupal_get_form('select_event_function'));
  $file_upload_form = drupal_render(drupal_get_form('photographer_drag_and_drop_form'));
  $style="<div style='display:none' id='upload_section' >$file_upload_form</div>";
  return $select_event.$style;
}
