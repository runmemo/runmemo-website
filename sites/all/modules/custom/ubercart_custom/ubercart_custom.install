<?php 


require_once drupal_get_path('module', 'ubercart_custom') . '/ubercart_custom.field.inc';

/**
 * 
 * implementes hook_enable
 */
function ubercart_custom_enable() {
  // add all fields that are defined in ubercart_custom.field.inc file
  foreach (_product_field_default_fields() as $field) {
    create_product_field($field);
  }
  
}

/**
 * 
 * Creates field and field instance from definition.
 * @param array $field Definition of the field generated by Features module
 */
function create_product_field($field) {
 if (isset($field['field_config'])) {
      $field_info = field_info_field($field['field_config']['field_name']);
      //print_r($field_info);
      if (!isset($field_info)) {
        field_create_field($field['field_config']);  
      } 
      else { // field exists, log message
         watchdog('Field creation', 
       	'No need to create a field as it already exists ' . $field['field_config']['field_name'] . '.',
         array(), WATCHDOG_NOTICE);
      }
   }
   if (isset($field['field_instance'])) {
     $field_info = field_info_instance('node', $field['field_instance']['field_name'], 'event');
     if(is_null($field_info)) { // field does not exist
       field_create_instance($field['field_instance']);
     }
     else { // field instance exists, no need to create, log message
        watchdog('Field creation', 
       	'No need to create an instance for a field as it already exists ' . $field['field_instance']['field_name'] . '.',
         array(), WATCHDOG_NOTICE);
     }
   }
}


/**
 * Update 7001:
 * - creates table uc_custom_order_discounts
 * - adds fields to product node
 */
function ubercart_custom_update_7001() {
  $schema = array();

  $schema['uc_custom_order_discounts'] = array(
    'description' => 'Order line items other than products.',
    'fields' => array(
      'discount_id' => array(
        'description' => 'Primary key: the discount ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
  ),
      'order_product_id' => array(
        'description' => 'The {uc_order_products}.order_product_id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
  ),
      'amount' => array(
        'description' => "The amount of the discount that was attibuted to product.",
        'type' => 'numeric',
        'precision' => 16,
        'scale' => 5,
        'not null' => TRUE,
        'default' => 0.0,
  ),
  ),
    'indexes' => array(
      'order_product_id' => array('order_product_id'),
  ),
    'primary key' => array('discount_id'),
    'foreign keys' => array(
      'order_id' => array('uc_order_products' => 'order_product_id'),
  ),
  );

  db_create_table('uc_custom_order_discounts', $schema['uc_custom_order_discounts']);

  //TODO: move to fields function 
  $fields = array();

  // Exported field: 'node-product-field_manual_tagging'.
  $fields['node-product-field_manual_tagging'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_manual_tagging',
      'foreign keys' => array(),
      'indexes' => array(
        'value' => array(
          0 => 'value',
        ),
      ),
      'locked' => '0',
      'module' => 'list',
      'settings' => array(
        'allowed_values' => array(),
        'allowed_values_function' => '',
      ),
      'translatable' => '0',
      'type' => 'list_boolean',
    ),
    'field_instance' => array(
      'bundle' => 'product',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'list',
          'settings' => array(),
          'type' => 'list_default',
          'weight' => 18,
        ),
        'example_node_list' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_manual_tagging',
      'label' => 'Manual tagging',
      'required' => FALSE,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'module' => 'options',
        'settings' => array(
          'display_label' => 0,
        ),
        'type' => 'options_onoff',
        'weight' => '12',
      ),
    ),
  );

  // Exported field: 'node-product-field_verified_by'.
  $fields['node-product-field_verified_by'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'field_verified_by',
      'foreign keys' => array(
        'uid' => array(
          'columns' => array(
            'uid' => 'uid',
          ),
          'table' => 'users',
        ),
      ),
      'indexes' => array(
        'uid' => array(
          0 => 'uid',
        ),
      ),
      'locked' => '0',
      'module' => 'user_reference',
      'settings' => array(
        'referenceable_roles' => array(
          2 => 0,
          3 => '3',
          4 => 0,
          5 => '5',
        ),
        'referenceable_status' => array(
          0 => 0,
          1 => 0,
        ),
        'view' => array(
          'args' => array(),
          'display_name' => '',
          'view_name' => '',
        ),
      ),
      'translatable' => '0',
      'type' => 'user_reference',
    ),
    'field_instance' => array(
      'bundle' => 'product',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'user_reference',
          'settings' => array(),
          'type' => 'user_reference_default',
          'weight' => '2',
        ),
        'example_node_list' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'field_verified_by',
      'label' => 'Verified by',
      'required' => 0,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(),
        'type' => 'options_select',
        'weight' => '11',
      ),
    ),
  );

  // Translatables
  // Included for use with string extractors like potx.
  t('Manual tagging');
  t('Verified by');

  foreach ($fields as $field) {
    create_product_field($field);
  }

}