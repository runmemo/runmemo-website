<?php

/**
 * @file
 * Install and uninstall functions for the ocr module.
 */

function ocr_install()
{
	variable_set('ocr_responsequeue', $conf['ocr-results-queue']);
	variable_set('ocr_requestqueue' , $conf['ocr-requests-queue']);
	
	switch ($GLOBALS['db_type']) {
		case 'mysql':
		case 'mysqli':
		
			db_query("CREATE TABLE {ocr_response_numbers} (
						nid int unsigned NOT NULL,
						number int unsigned NOT NULL,
						top int unsigned NOT NULL,
						bottom int unsigned NOT NULL,
						width int unsigned NOT NULL,
						height int unsigned NOT NULL,
						probability double precision (2,5), 
						received datetime,
						PRIMARY KEY  (nid, number)
					)");
			
			break;
	}
	
	// @todo define OCR fields on Product node
	
}
/**
 * Implements hook_schema().

function ocr_schema() {
  $schema['ocr_response'] = array(
    'description' => 'Stores response from OCR passed through amazon sqs .',
    'fields' => array(
      'ocr_responseid' => array(
        'type' => 'int',
       
        'not null' => TRUE,
        
        'description' => "The unique id for response.",
      ),
	  'nid' => array(
        'type' => 'int',
       
        'not null' => TRUE,
       
        'description' => "The unique id for response.",
      ),
      'ocr_messageid' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
       
        'description' => 'The messageid of the message.',
       ),
      'ocr_response' => array(
        'type' => 'text',
       'not null' => TRUE,       
       'description' => 'The response from OCR.',
       ),
    
	'ocr_status' => array(
        'type' => 'int',
        
        'not null' => TRUE,
        
        'description' => "The status of the response.",
      ),
	  'received' => array(
         'type' => 'int',
        'not null' => TRUE,
        
        'description' => 'The timestamp of the response.',
      ),
    
    'primary key' => 'ocr_responseid',
    )
  );
return $schema;
 }
  */