<?php

/**
 * Form alter function
 * by using this form_alter function we can alter the form without editing core module
 * @param $form,$form_state,$form_id
 * $form give the form value
 * $form_id is the form id
 */
function user_custom_form_user_login_alter(&$form, $form_state) {

      $form['fake-password'] = array (
       '#id' => 'edit-pass-fake', 
       '#type' => 'textfield',
       '#default_value' => 'Password',     
      ); 
      $form['join-text'] = array('#markup' => '<span id="join-us-text">' . t('Not a member? ') . '</span>', );
      $form['join-link'] = array('#markup' => l(t('Join us!'), 'login', array('attributes' => array('id' => 'user-login-register'))));
      $form['actions']['submit']['#value'] = 'Login';
  
      $form['#validate'][] = 'cookie_check_validate';
   
}
/**
 * implements hook_form_alter for user_register_form 
 */  
function user_custom_form_user_register_form_alter(&$form, $form_state) {
   $form['#submit'][''] = 'user_set_photographer_role'; 
}

function user_custom_form_user_profile_form_alter(&$form, $form_state) {
  
}

/**
 *Function for insert the user role in the users table when submit the create account submit button
 * @param $form
 * $form gives form values from the user registration page
 */
function user_set_photographer_role($form, &$from_state) {

    $uid = $form['#user']->uid;
    $rid = user_custom_helper::get_photographer_rid();

    $new_user = user_load($uid);
    user_save($new_user, array ('roles'=>array($rid => 'Photographer')));

}


/**
 * Validate callback for user login form submission.
 *
 * If the cookie set previously is not present, redirect.
 */
function cookie_check_validate($form, &$form_state) {
  if (!$_COOKIE) {
    $domain = ini_get('session.cookie_domain') ? ini_get('session.cookie_domain') : $_SERVER['HTTP_HOST'];
    form_set_error('', t('It seems your browser does not accept cookies. To log into this site, you need to accept cookies from the domain @domain.', array('@domain' => $domain)));
  }
}


