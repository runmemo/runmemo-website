<?php


function feedback_custom_init() {
    drupal_add_js(drupal_get_path('module', 'feedback_custom') . '/feedback_custom.js');
}

/**
 * Form alter function
 * by using this form_alter function we can alter the form without editing core module
 * @param $form,$form_state,$form_id
 * $form give the form value
 * $form_id is the form id
 */
function feedback_custom_form_alter(&$form, $form_state, $form_id) {
  //alter the feedback form
  if ($form['#form_id'] == 'feedback_form') {
    drupal_add_css(drupal_get_path('module', 'feedback_custom') . '/feedback_custom.css');
    $form['close'] = array(
    	'#markup' => '<div id="fb_close">
    					<span id="feedback_title">' . t('Feedback') . '</span>
    					<a id="fb_close_link" style="cursor:pointer">&nbsp;</a>
    				  </div>', '#weight' => '-5');
    $form['help']['#weight'] = '-1'; 
    $form['url_hidden'] = array('#type' => 'textfield', '#default_value' => '');
    //$form['#validate'][] = 'feedback_form_validate';
    $form['#submit'] = array('custom_feedback_submit'); 

  }
   
}

/**
 * Form validation
 * @param type $form
 * @param type $form_state 
 */
function custom_feedback_submit($form, &$form_state) {
  global $user;
  $values = $form_state['values'];
  $links = explode("#", $values['url_hidden']);
  
  $entry = new stdClass();
  entity_form_submit_build_entity('feedback', $entry, $form, $form_state);
  $entry->message = $form_state['values']['message'];
  $entry->location = $links[0];
  feedback_save($entry);
  $entry->location_masked  = $links[0];
  $entry->url = $links[0];
  
  feedback_save($entry);
  drupal_set_message(t('Thank you for the feedback!'));
  
}




