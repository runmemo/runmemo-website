<?php

/*Hooks*/

/**
 * Implementation of hook_cron()
 * Function for generating thumbnail images
 */
 
function generate_thumbnails_cron() { 

 $filepath_drupal = variable_get('file_public_path') .'/';
 $dest = $filepath_drupal.'styles/thumbnail/public';
 $prev_dest = $filepath_drupal.'styles/preview-with-watermark/public';
 
  $user_helper_object = new user_helper_model();
 //$photos=$user_helper_object->get_local_photos();
 
 $thumbsize=$user_helper_object->get_thumbnail_size();
 $thumb=unserialize($thumbsize->data);
 
 $previewsize=$user_helper_object->get_preview_size();
 $prev_size=unserialize($previewsize->data);
 //print_r($prev_size);exit;
 
 foreach ($user_helper_object->get_local_photos() as $row) {//print_r($row);exit;
  $sourceimagename = "";
  $url = str_replace("public://", $filepath_drupal, $row->uri);
  
  //$url=$filepath_drupal.$filename;
  
  
  
  if (file_exists($url))
  { 
   //create the physical thumbnail image to its destination 
   // get the file name from the source file 
   $filearr = explode('/', $url);
   $sourceimagename = array_pop($filearr);
   if (!file_exists(url($dest.'/'.$sourceimagename, array('absolute' => TRUE))))
   {
      
      
      
      $item=array('uri'=>$row->uri,'width'=>$thumb['width'],'height'=>$thumb['height']);
      $path=array($dest.'/'.$sourceimagename);
      $variables=array('item'=>$item,'image_style'=>'thumbnail','path'=>$path);
      theme_image_formatter($variables);
      
    ////////////////////////////////////////////////////////////////
    $ch = curl_init();

    // set URL and other appropriate options
    curl_setopt($ch, CURLOPT_URL, url($dest.'/'.$sourceimagename, array('absolute' => TRUE)));
    curl_setopt($ch, CURLOPT_TIMEOUT_MS, 10000);
    curl_setopt($ch, CURLOPT_HEADER, 0);

    // grab URL and pass it to the browser
    curl_exec($ch);

    // close cURL resource, and free up system resources
    curl_close($ch);
    ////////////////////////////////////////////////////////////////
      
      
      
    
   }
   else
   {
    echo '<br>Found '.$dest.$sourceimagename.' already existing. Hence exiting.';
    break;
   }
   if (!file_exists(url($prev_dest.'/'.$sourceimagename, array('absolute' => TRUE))))
   {
      $item=array('uri'=>$row->uri,'width'=>$prev_size['width'],'height'=>$prev_size['height']);
      $path=array($prev_dest.'/'.$sourceimagename);
      $variables=array('item'=>$item,'image_style'=>'preview-with-watermark','path'=>$path);
      theme_image_formatter($variables);
      
    ////////////////////////////////////////////////////////////////
    $ch = curl_init();

    // set URL and other appropriate options
    curl_setopt($ch, CURLOPT_URL, url($prev_dest.'/'.$sourceimagename, array('absolute' => TRUE)));
    curl_setopt($ch, CURLOPT_TIMEOUT_MS, 10000);
    curl_setopt($ch, CURLOPT_HEADER, 0);

    // grab URL and pass it to the browser
    curl_exec($ch);

    // close cURL resource, and free up system resources
    curl_close($ch);
    ////////////////////////////////////////////////////////////////
   }
   
   if($thumb_status && $prev_status)
   {
    //Update the DB
    $status = $user_helper_object->update_thumb_status($row->fid);
   }
   
   
   
   
  }
  else {
   echo '<br>Did not find source  file '.$url;
  }
 }//for each
 
 //echo "<br>Process completed successfully.";
 //exit;
}

