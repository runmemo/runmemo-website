<?php

/**
 * @file contains S3 Store module for pre-caching of images in Amazon S3.
 * @author Bulat Yapparov
 */

/**
 * Implementation of hook_cron()
 * Function for getting images from local and pushing to s3
 */
function s3_store_cron() {
  $queue = DrupalQueue::get('send_images_to_S3');

   //Pull items out one at a time.
  while ($item = $queue->claimItem(15)) {
    //Try saving the data.
    $file = $item->data;
    try {
      // send file and associated image cache files to s3
      _send_file_to_s3($file);
      // send file to OCR queue
      _ocr_send_request($file);
    }
    catch (Exception $e) {
      watchdog_exception('S3 error', $e);
    }
    $queue->deleteItem($item);
  };
}

/**
 *
 * Sends file to S3 backet with image cache
 * @param object $file contains properties of the file
 * 
 */
function _send_file_to_s3($file, $dummy = FALSE) {
  
  if ($dummy) {
    return;
  }
  
  // Check whether file exists
  if (!file_exists($file->uri)) {
    throw new InvalidArgumentException('Sending file to S3 failed as image does not exist: ' . $file->uri);
  }

  $bucket = variable_get('image-store-bucket');
  // Send original file to S3
 
  $path_prefix = 'public://';
 
  $s3_mover = new s3_mover($path_prefix, $bucket);

  // Send cache images to S3
  $precached_styles = _pre_image_cache_styles();
  foreach ($precached_styles as $style_name) {
    $style = image_style($style_name);
    if ($style) {
      $s3_mover->move_imagecache($file, $style_name);
    }
    else {
      watchdog('S3 info', 'Style does not exists: ' . $style_name, array(), WATCHDOG_WARNING);
    }

  };
  // move original file
  $s3_mover->move_file($file, S3::ACL_AUTHENTICATED_READ);
}

/**
 * function to create signed url to download orginal image
 */
function get_s3_signed_url($resource) {
  $bucket = variable_get('image-store-bucket', '');
  return amazon_s3_get_object_url($bucket, $resource, 60000000);  
}
