<?php
/**
 * Init function for adding the external file
 */

function general_init(){
    //to add the js file
    drupal_add_js(drupal_get_path("module","general")."/js/general.js");
    drupal_add_css(drupal_get_path('module', 'general') . '/general.css');
	
}



/**
 * Form alter function
 * by using this form_alter function we can alter the form without editing core module
 * @param $form,$form_state,$form_id
 * $form give the form value
 * $form_id is the form id
 */
function general_form_alter(&$form, $form_state, $form_id){
    
    
    if($form['#form_id']=='user_login'){
        $form['actions']['submit']['#value'] = 'Login';
    }
    //registration page
    if($form['#form_id']=='user_register_form'){

        $base_path=base_path().'sites/default/help_icon.gif';
        $form['photo_paypal_icon']=array('#markup'=>"<p><span title='Your Paypal account ID' id='paypal_icon' style='float:right;padding-right:102px;padding-top:18px;color:red;'><img src='$base_path'></img></span></p>",'#weight'=>'5');
        //add the form submit function for insert the user role in the user table
        $form['#submit']['']= 'user_role_insertion'; 


    }
    //profile edit page
    if($form['#form_id']=='user_profile_form'){
        global $user;
        $uid=$user->uid;
        $base_path=base_path().'sites/default/help_icon.gif';
        $form['photo_paypal_icon']=array('#markup'=>"<p><span title='Your Paypal account ID' id='paypal_icon' style='float:right;padding-right:102px;padding-top:18px;color:red;'><img src='$base_path'></img></span></p>",'#weight'=>'5');
        $form['field_term']['#type'] = 'hidden';

    }
}

/**
 *Function for insert the user role in the users table when submit the create account submit button
 * @param $form
 * $form gives form values from the user registration page
 */
function user_role_insertion($form,&$from_state){
	
    //call class function
    $photographer=new photographer_model();
    $user_role=$photographer->get_role_id();
    $role_id=$user_role->rid;

    $uid=$form['#user']->uid;

    //call the class function for update the user role in the user table
    $photographer->user_role_update($role_id,$uid);

    //call the class function for insert the user role in the user roles table
    $photographer->user_role_id_insert($role_id,$uid);

}

/**
 *Function for getting images from local and pushing to s3
 * 
 * 
 */
function general_cron(){


   
   $photographer = new photographer_model();
   $photos_url = $photographer->get_local_photos();
   
   $s3 = amazon_s3_get_instance();
   $bucket= variable_get('amazons3_bucket', '');
   $acl = 'public-read-write';
   
   $path=drupal_realpath('public://');
   
    

    foreach ($photos_url as $photo_url) {
	
	    $thumbnail_local_path = $path.'/styles/thumbnail/public/'.$photo_url->filename;
		$thumb_local_path='public://styles/thumbnail/public/'.$photo_url->filename;
		$thumb_desc_path='styles/thumbnail/s3/'.$photo_url->filename;
		
		$preview_local_path=$path.'/styles/preview-with-watermark/public/'.$photo_url->filename;
		$prev_local_path='public://styles/preview-with-watermark/public/'.$photo_url->filename;
	    $prev_desc_path='styles/preview-with-watermark/s3/'.$photo_url->filename;
		
		/////////////////////////////Pushing the files///////////////////////////////////////////
		$orig_file_path = $photo_url->uri;
		
		if (file_exists($photo_url->uri))
		{
		   
			  $orig_success = $s3->putObjectFile($photo_url->uri, $bucket, $photo_url->filename, $acl);
		}
		
		if(file_exists($thumbnail_local_path))
		{
		     
		     $thumb_success = $s3->putObjectFile($thumb_local_path, $bucket, $thumb_desc_path, $acl);
		}
		
		if(file_exists($preview_local_path))
		{
		     
		     $preview_success = $s3->putObjectFile($prev_local_path, $bucket, $prev_desc_path, $acl);
			 
		}
		
		if($orig_success && $thumb_success && $preview_success)
		{
		   
			
			$photographer->update_s3_status($photo_url->entity_id);
			
			$url="s3://".$photo_url->filename;
			$photographer->update_url($photo_url->fid,$url);
			
			file_unmanaged_delete($orig_file_path);
			file_unmanaged_delete($thumb_local_path);
			file_unmanaged_delete($prev_local_path);
			
			
		}
		
		
		
		
	}
	
    
	
    
   


}






