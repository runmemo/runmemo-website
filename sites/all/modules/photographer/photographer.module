<?php
/**
 * Init function for adding the external file
 */

function photographer_init()
{
	//to add the js file
	drupal_add_js(drupal_get_path("module","photographer")."/js/photographer.js");
	drupal_add_js(drupal_get_path("module","photographer")."/js/progress_bar.js");
	drupal_add_css(drupal_get_path('module', 'photographer') . '/photographer.css');
}

/** 
 * Create the hook menu for each page 
 * by using this we can map to the related page
 */
function photographer_menu()
{
	
	//url for photographer
	$items['photographer'] = array(
			    'title' => 'Upload Photos',
			    'description' => t('View the objects in a bucket on your Amazon S3 account.'),
			    'page callback' => 'photographer_upload_photos',
			    'page arguments' => array(1),
			    'access arguments' => array('access_photographer'),
			    'type' => MENU_CALLBACK,
			  );
	return $items;

}

/**
 * Set the pemission for each url in the admin side
 * so we can the restrict the particular page to accessed by the anonymouse user
*/
function photographer_permission()
{

	return array(
			    

			    'access_photographer' => array(
			      'title' => t('Access photographer'),
			      'description' => t('Access photographer'),
			      'restrict access' => TRUE,
			    ),
		     );
}

////////////////// * PHOTOGREPHER SECTION OPEN * ///////////////////////////////////////
/** 
 * Photographer page
 * where the photographer can upload the photos by selecting the event
 * uploaded photos are stored in the amazon_s3
*/
function select_event_function($form, &$form_state)
{
	$form = array();
	$form['events_select']=array('#type'=>'select','#title'=>'Select Event','#id'=>'event_select','#attributes'=>array('onchange'=>'return select_event_upload();'));
	$form['events_select']['#options']=array('select_event'=>"Select Event");
	$event_name=amazon_s3_get_buckets();
	foreach($event_name as $event_name_value)
	{
		$event_title=$event_name_value;
		if($event_title!='home_page')
			$form['events_select']['#options'][$event_title]=$event_title;
	}
	return $form;

}
/**
 * Drag and drop upload form creation
 */
function photographer_drag_and_drop_form($form, &$form_state) {

  $form = array();
  $form['#attributes'] = array('enctype' => 'multipart/form-data');

  $form['box'] = array(
    '#type' => 'fieldset',
    '#title' => t('Upload File'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  $form['box']['file'] = array(
    '#type' => 'plupload',
    '#title' => t('File to upload'),
    '#description' => t('Pick a file to upload'),
    '#size' => 40,
  );

  $form['box']['upload'] = array('#type' => 'submit', '#value' => 'Upload','#attributes'=>array('onclick'=>'return drag_drop_upload_validation();'));
  $form['box']['selected_event']=array('#type'=>'textfield','#title'=>'','#id'=>'selected_event_drag');
  return $form;
}

/** 
 * Drag and drop submit function
 */

function photographer_drag_and_drop_form_submit($form, &$form_state) {
//resource 2
  global $user;

  $uid=$user->uid;

  $s3 = amazon_s3_get_instance();

  //for loop for count the uploaded files resource 2
  for($i=0;$i<count($form['box']['file']['#value']);$i++)
  {
	  $bucket = $form['box']['selected_event']['#value'];
	  $upload_temp_filepath = $form['box']['file']['#value'][$i]['tmppath'];
	  $object_filename = $form['box']['file']['#value'][$i]['name']; 	

	  $acl = 'public-read';
	  $success = $s3->putObjectFile($upload_temp_filepath, $bucket, $object_filename, $acl);
	  
	  if ($success) {

	    $message = t('Succesfully uploaded the file %filename to the event %bucket.', array('%filename' => $object_filename, '%bucket' => $bucket));
	    drupal_set_message($message);
	  } else {
	    $message = t('Failed to upload the file %filename to the event %bucket.', array('%filename' => $object_filename, '%bucket' => $bucket));
	    drupal_set_message($message, 'error');
	  }
	  
  }
  $form_state['redirect'] = "photographer";
}

/** 
 * Zip file upload form
 */
function photographer_zip_file_form($form, &$form_state) {
  $form = array();
  $form['#attributes'] = array('enctype' => 'multipart/form-data');
  $form['box1'] = array(
    '#type' => 'fieldset',
    '#title' => t('Upload Zip File'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#attached'=>array('css' => array(drupal_get_path('module', 'amazon_s3') . '/amazon_s3.css')),
  );
  $form['box1']['file1'] = array(
    '#type' => 'file',
    '#title' => t('File to upload'),
    '#description' => t('Pick a zip file to upload to the event.'),
    '#size' => 40,
  );
  $form['box1']['upload1'] = array('#type' => 'submit', '#value' => 'Upload','#attributes'=>array('onclick'=>"return CallJS('Demo()')"));
  $form['box1']['progress']=array('#markup'=>"<div id='progress' style='display:none;'></div>");//for progress bar
  $form['box1']['selected_event']=array('#type'=>'textfield','#title'=>'','#id'=>'selected_event_zip');
  return $form;
}
/**
 * Submit function for zip file upload and extraction 
 */
function photographer_zip_file_form_submit($form, &$form_state) {
	$s3 = amazon_s3_get_instance();
	$filename = $_FILES["files"]["name"]["file1"];
	$source = $_FILES["files"]["tmp_name"]["file1"];
	$type = $_FILES["files"]["type"]["file1"];
	$acl='public-read';//$form['box1']['acl1']['#value'];
	$bucket=$form['box1']['selected_event']['#value'];

	$name = explode(".", $filename);

	$accepted_types = array('application/zip', 'application/x-zip-compressed', 'multipart/x-zip', 'application/x-compressed');
	foreach($accepted_types as $mime_type) {
		if($mime_type == $type) {
			$okay = true;
			break;
		} 
	}
	
	$continue = strtolower(pathInfo($filename, PATHINFO_EXTENSION)) == 'zip' ? true : false;

	if(!$continue) {
		$message = "The file you are trying to upload is not a .zip file. Please try again.";
		drupal_set_message($message,'error');
	}
 
	if($continue)
	{

		$base_path=$_SERVER['DOCUMENT_ROOT'].base_path()."sites/default/files";

		$target_path = "$base_path/".$filename;  
		if(move_uploaded_file($source, $target_path)) 
		{

			$zip = new ZipArchive();
			$x = $zip->open($target_path);
			if ($x === true)
			{
				$folder=$base_path.'/'.$name[0];
				$zip->extractTo("$folder"); 
			
			
				chmod("$base_path/".$name[0],0777);
			
				$file_exist= "$base_path/".$name[0].'/'.$name[0];
				
				
				if (file_exists($file_exist)) 
				{

					if ($handle = opendir("$base_path/".$name[0].'/'.$name[0])) 
					{
					 	//This is the correct way to loop over the directory. 
						while (false !== ($file = readdir($handle)))
						{
							$name_path=explode('.',$file);

							$lower_extension=strtolower(pathInfo($file, PATHINFO_EXTENSION));

							if(($lower_extension=='jpg') || ($lower_extension=='jpeg') )
							{
								if($name_path[0]!='')
								{
									rename("$base_path/$name[0]/$name[0]/$file", "$base_path/$name[0]/$name[0]/$name_path[0].jpeg");
								}
								$file_path1="$base_path/$name[0]/$name[0]/$name_path[0].jpeg";

								if(($file_path1!="$base_path/$name[0]/$name[0]/..jpeg") && ($file_path1!="$base_path/$name[0]/$name[0]/.jpeg") && ($file_path1!=''))
				                                {
									$s3->putObjectFile("$base_path/$name[0]/$name[0]/$name_path[0].jpeg", $bucket, $file, $acl);
									unlink("$base_path/$name[0]/$name[0]/$name_path[0].jpeg");
				                                }
							}
							else
							{
								if(($file!='.') && ($file!='..'))
								{
									unlink("$base_path/$name[0]/$name[0]/$file");
									drupal_set_message($file.' image was not uploaded because of invalid image extension','error');
								}
					
							}

						  }
						rmdir("$base_path/".$name[0].'/'.$name[0]);
						rmdir("$base_path/".$name[0]);
						closedir($handle);
					}
					
					$message = "Your .zip file was uploaded and unpacked.";
					drupal_set_message($message);
				}
			
				else
				{

					if ($handle = opendir("$base_path/".$name[0])) 
					{
					    	//This is the correct way to loop over the directory. 
						while (false !== ($file = readdir($handle)))
						{
							$name_path=explode('.',$file);

							$lower_extension=strtolower(pathInfo($file, PATHINFO_EXTENSION));

							if(($lower_extension=='jpg') || ($lower_extension=='jpeg') )
							{
								if($name_path[0]!='')
								{
									rename("$base_path/$name[0]/$file", "$base_path/$name[0]/$name_path[0].jpeg");
								}
								$file_path1="$base_path/$name[0]/$name_path[0].jpeg";

								if($file_path1!="$base_path/$name[0]/..jpeg" && $file_path1!="$base_path/$name[0]/.jpeg" && $file_path1!='')
				                                {
									$s3->putObjectFile("$base_path/$name[0]/$name_path[0].jpeg", $bucket, $file, $acl);

									unlink("$base_path/$name[0]/$name_path[0].jpeg");
				                                }
							}
							else
							{
								if(($file!='.') && ($file!='..'))
								{
									unlink("$base_path/$name[0]/$file");
									drupal_set_message($file.' image was not uploaded because of invalid image extension','error');
								}
					
							}

						  }
						rmdir("$base_path/".$name[0]);

						closedir($handle);
					}
					$message = "Your .zip file was uploaded and unpacked.";
					drupal_set_message($message);
				}
			}

			$zip->close();
 
			unlink($target_path);
		} 
		else 
		{	
			$message = "There was a problem with the upload. Please try again.";
			drupal_set_message($message);
		}
	}

}


/**
 * Call back function for photogrepher
 */
function photographer_upload_photos() {
  $select_event=drupal_render(drupal_get_form('select_event_function'));
  $file_upload_form = drupal_render(drupal_get_form('photographer_drag_and_drop_form'));
  $file_upload_form1 = drupal_render(drupal_get_form('photographer_zip_file_form'));
  $style="<table style='display:none' id='upload_section' border='0'><tr><td width='450px'>$file_upload_form</td><td>$file_upload_form1</td></tr></table>";
  return $select_event.$style;
}
////////////////// * PHOTOGREPHER SECTION CLOSE * ///////////////////////////////////////
